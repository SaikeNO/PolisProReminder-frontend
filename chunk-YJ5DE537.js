import{b as r,c as s,n as l,o as t,p as n}from"./chunk-Z65746U3.js";import{ma as c,sa as I}from"./chunk-WRJUXR2E.js";var g=r("[Insurers Page] Get All Insurers"),E=r("[Insurers Page] Get All Insurers Success",s()),L=r("[Insurers Page] Get All Insurers Failure",s()),p=r("[Insurers Page] Get Paginated Insurers",s()),j=r("[Insurers Page] Get Paginated Insurers Success",s()),D=r("[Insurers Page] Get Paginated Insurers Failure",s()),R=r("[Insurers Page] Reload Paginated Insurers"),b=r("[Insurers Page] Reload Paginated Insurers Success",s()),q=r("[Insurers Page] Reload Paginated Insurers Failure",s()),d=r("[Insurers Page] Create Insurer",s()),v=r("[Insurers Page] Create Insurer Success",s()),Q=r("[Insurers Page] Create Insurer Failure",s()),P=r("[Insurer Page] Edit Insurer ",s()),k=r("[Insurer Page] Edit Insurer Success",s()),w=r("[Insurer Page] Edit Insurer Failure",s()),m=r("[Insurer Page] Delete Insurer ",s()),z=r("[Insurer Page] Delete Insurer Success",s()),B=r("[Insurer Page] Delete Insurer Failure",s());var u=e=>e.insurers,h=n(u,e=>e.isLoading),x=n(u,e=>e.error),S=n(u,e=>e.query),F=n(u,e=>e.insurers),A=n(u,e=>e.totalPages),f=n(u,e=>e.itemsFrom),T=n(u,e=>e.itemsTo),$=n(u,e=>e.totalItemsCount);var O=(()=>{let i=class i{constructor(){this.store=I(l),this.isLoading$=this.store.pipe(t(h)),this.error$=this.store.pipe(t(x)),this.query$=this.store.pipe(t(S)),this.insurers$=this.store.pipe(t(F)),this.totalItemsCount$=this.store.pipe(t($)),this.totalPages$=this.store.pipe(t(A)),this.itemsFrom$=this.store.pipe(t(f)),this.itemsTo$=this.store.pipe(t(T))}getPaginatedInsurers(o){this.store.dispatch(p({query:o}))}getAllInsurers(){this.store.dispatch(g())}createInsurer(o){this.store.dispatch(d({createInsurer:o}))}editInsurer(o,a){this.store.dispatch(P({createInsurer:o,id:a}))}deleteInsurer(o){this.store.dispatch(m({id:o}))}};i.\u0275fac=function(a){return new(a||i)},i.\u0275prov=c({token:i,factory:i.\u0275fac,providedIn:"root"});let e=i;return e})();export{g as a,E as b,L as c,p as d,j as e,D as f,R as g,d as h,v as i,Q as j,P as k,k as l,w as m,m as n,z as o,B as p,O as q};
